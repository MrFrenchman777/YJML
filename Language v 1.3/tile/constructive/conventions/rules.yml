type: rule
props:
# type rule has two main parts, important event specification (which is reusable in other rules)
# and rule about the event itself
# do not confuse "important event specification" and "event_reported" entity when you report parts of occuring reality in the system
  type: event
  props: # or you can *inherit* all props from other event to just create completely different rule about it 
    title: !string 
    description: !string # short description
    content:
      text: !string # with masks, for example "ROLE publishes Х", или "ROLE beats ROLE" + we can add additional name of the role for in-rule use using "=": ex:"ANY_ROLE@ANY_TILE = AGRESSOR"
      media: 
      link: !href
    confirmation_method: # fill only one that fits
      actor_report: bool # report of somebody who actually do the action of the event
      witnesses: # reports of witnesses
        number: # you can specify what amount of withesses
        requirements: [{key:value}] # and what requirements for them
      court: [TILE_ID] # list possible court tiles whose decisions you will trust
      specific_role_report: [ROLE] # you can refer by in-rule name of role
    binary: bool # is your event binary (like the fact of pregnancy) or it has some important quantitative characteristics? 
    event_scales: [{key:value}] 

# rule connected to the event above
event_confirmed: event_title # We noticed event occured...
event_modality: must|may| !(may) # !may = is not allowed
when:
  - always
  - DATE.TIME, repeating time or period
  - after another event or action
presence_actions: # actions in case of event presence
  enforcer: system | court_decision | ROLE
    on_whom: ROLE 
    orders: [string] # with mask; send orders to ROlE above
    rating:
      scale: scale_id | scale_name  
      amount: number|event_scale_name # use number (min-max) or event_scale_name from event declaration and simple math 
absence_actions: # actions in case of event presence, use with must-rules
  enforcer: system | court_decision | ROLE
    on_whom: ROLE 
    orders: [string] # with mask; send orders to ROlE above
    rating: 
      scale: scale_id | scale_name  
      amount: number|event_scale_name
# use multiple blocks of presence and absence actions
exceptions: [{key:value}] # use optional fields to specify the exceptions
flex: immutable|fixed until DATE.TIME|flexible
value: VALUE_NAME # must be specified in this tile or in supertile-chain
tags: [string] # for grouping purposes and other


