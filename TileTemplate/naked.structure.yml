# entity depth = 1
entity:

  title:
  description:

  tile:

# tile depth = 1     
tile:
  functional: # тут только описания че деалет тайл
  terms: # словарь всех терминов использующихся в тайле
  constructive: # движок тайла, этим мы (онтологи) заняты много щас

# constructive, depth = 1.5
constructive: # движок тайла
  subtiles: #даны ссылки на сабтайлы и в каждом из них перечисленно, какое взаимодействие происходит и как
  roles_spec:
    target_roles:
    system_roles:
    design_time_roles:
  types: #что это?
  conventions:
    purpose_of_cooperation:
    values:
    rules:
  status_spec: #какие есть стадии ЖЦ у версии описывать тут

# rating scale
rating_scale:
  ID: NUMBER
  scale_owner: USER|ROLE|TILE # по дефолту структура, внутри которой создается
  target_group_type: USER|TILE # какого типа сущность шкала может оценивать
  target_group: USERS|TILES|JURISDICTIONS # кого шкала оценивает, то есть кто вообще может иметь по ней значение
	name: STRING
  type: default_good|default_bad|rating|scale # rating - to be shown, scale - to be a piece for other scales|ratings
  #Я бы вообще убрал гуд и бед, скорее сделал быпрямо в стандарте у каждого тайла две шкалы уже задефайненые с такими названиями
  approve: auto | witness | judge # limitations to approval types for rules
  min: NUMBER # -100 <= min
  max: NUMBER # min < max <=100 # numbers may differ
	step: NUMBER # 0.001 < step <= 1 & (max - min) / step == integer
 

# simple rating rule
rule:
  ID: NUMBER
  title: STRING
  statement: STRING # i guess it's like purpose of rule? Or what?
  flex: immutable|fixed until DATE.TIME|flexible
  group: "rating" #sets pre-built set of fields
  approve: auto | witness | judge # must fit scale limitations
  if: (EVENT.status == approved)
    then: RATING_ACTION
    else: RATING_ACTION
   
# rating action
_RatingAction:
  args:
    scale_id: rating_scale_ID # по какой шкале меняем
    evaluated_entity: USER|TILE|JURISDICTION # чей показатель меняем
    event.fields: EVENT.FIELDS # какие-то поля ивента могут понадобиться для вычисления инкремента
    #например: event = donation, х - количество пожертованных денег, increment = +х 
  return:
    increnent: NUMBER # на сколько его меняем
    # as well should be option to give rating in amount of steps up or down
    # should some harder math be avalible here? Like "x2 points"